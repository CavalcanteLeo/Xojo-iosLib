#tag IOSView
Begin iosView CALayerView1
   BackButtonTitle =   ""
   Compatibility   =   ""
   Left            =   0
   NavigationBarVisible=   True
   TabTitle        =   ""
   Title           =   "iosLibCAGradientLayer"
   Top             =   0
   Begin iOSLibCanvas ImageView1
      AccessibilityHint=   ""
      AccessibilityLabel=   ""
      AutoLayout      =   ImageView1, 2, <Parent>, 2, False, +1.00, 1, 1, -*kStdGapCtlToViewH, 
      AutoLayout      =   ImageView1, 1, <Parent>, 1, False, +1.00, 1, 1, *kStdGapCtlToViewH, 
      AutoLayout      =   ImageView1, 8, , 0, False, +1.00, 1, 1, 170, 
      AutoLayout      =   ImageView1, 3, TopLayoutGuide, 4, False, +1.00, 1, 1, *kStdControlGapV, 
      Height          =   170.0
      Left            =   20
      LockedInPosition=   False
      Scope           =   0
      Top             =   73
      Visible         =   True
      Width           =   280.0
   End
   Begin iOSButton Button1
      AccessibilityHint=   ""
      AccessibilityLabel=   ""
      AutoLayout      =   Button1, 8, , 0, False, +1.00, 1, 1, 30, 
      AutoLayout      =   Button1, 7, , 0, False, +1.00, 1, 1, 110, 
      AutoLayout      =   Button1, 3, BottomLayoutGuide, 3, False, +1.00, 1, 1, -30, 
      Caption         =   "Return to menu"
      Enabled         =   True
      Height          =   30.0
      Left            =   0
      LockedInPosition=   False
      Scope           =   0
      TextColor       =   &c007AFF00
      TextFont        =   ""
      TextSize        =   0
      Top             =   450
      Visible         =   True
      Width           =   110.0
   End
   Begin iOSTextField ColorField
      AutoLayout      =   ColorField, 8, , 0, True, +1.00, 1, 1, 31, 
      AutoLayout      =   ColorField, 3, ImageView1, 4, False, +1.00, 1, 1, *kStdControlGapV, 
      AutoLayout      =   ColorField, 2, ImageView1, 2, False, +1.00, 1, 1, -58, 
      AutoLayout      =   ColorField, 1, ImageView1, 1, False, +1.00, 1, 1, 0, 
      Enabled         =   True
      Height          =   31.0
      KeyboardType    =   "0"
      Left            =   20.0
      LockedInPosition=   False
      Password        =   False
      PlaceHolder     =   "Colors"
      Scope           =   0
      Text            =   ""
      TextAlignment   =   "0"
      TextColor       =   &c00000000
      TextFont        =   ""
      TextSize        =   10
      Top             =   251.0
      Visible         =   True
      Width           =   222.0
   End
   Begin iOSButton Button2
      AutoLayout      =   Button2, 3, ImageView1, 4, False, +1.00, 1, 1, *kStdControlGapV, 
      AutoLayout      =   Button2, 2, ImageView1, 2, False, +1.00, 1, 1, 0, 
      AutoLayout      =   Button2, 1, , 0, False, +1.00, 1, 1, 259, 
      AutoLayout      =   Button2, 8, , 0, False, +1.00, 1, 1, 30, 
      Caption         =   "Set"
      Enabled         =   True
      Height          =   30.0
      Left            =   259.0
      LockedInPosition=   False
      Scope           =   0
      TextColor       =   &c007AFF00
      TextFont        =   ""
      TextSize        =   0
      Top             =   251.0
      Visible         =   True
      Width           =   41.0
   End
   Begin iOSTextField LocationsField
      AutoLayout      =   LocationsField, 3, ColorField, 4, False, +1.00, 1, 1, *kStdControlGapV, 
      AutoLayout      =   LocationsField, 2, Button4, 1, False, +1.00, 2, 1, -*kStdControlGapH, 
      AutoLayout      =   LocationsField, 1, <Parent>, 1, False, +1.00, 1, 1, 20, 
      AutoLayout      =   LocationsField, 8, , 0, True, +1.00, 1, 1, 31, 
      Enabled         =   True
      Height          =   31.0
      KeyboardType    =   "0"
      Left            =   20.0
      LockedInPosition=   False
      Password        =   False
      PlaceHolder     =   "Locations"
      Scope           =   0
      Text            =   ""
      TextAlignment   =   "0"
      TextColor       =   &c00000000
      TextFont        =   ""
      TextSize        =   10
      Top             =   290.0
      Visible         =   True
      Width           =   182.0
   End
   Begin iOSButton Button3
      AutoLayout      =   Button3, 7, , 0, False, +1.00, 1, 1, 41, 
      AutoLayout      =   Button3, 3, Button2, 4, False, +1.00, 1, 1, *kStdControlGapV, 
      AutoLayout      =   Button3, 1, <Parent>, 1, False, +1.00, 1, 1, 259, 
      AutoLayout      =   Button3, 8, , 0, False, +1.00, 1, 1, 30, 
      Caption         =   "Set"
      Enabled         =   True
      Height          =   30.0
      Left            =   259.0
      LockedInPosition=   False
      Scope           =   0
      TextColor       =   &c007AFF00
      TextFont        =   ""
      TextSize        =   0
      Top             =   289.0
      Visible         =   True
      Width           =   41.0
   End
   Begin iOSButton Button4
      AutoLayout      =   Button4, 7, , 0, False, +1.00, 1, 1, 41, 
      AutoLayout      =   Button4, 3, ColorField, 4, False, +1.00, 1, 1, *kStdControlGapV, 
      AutoLayout      =   Button4, 2, Button3, 1, False, +1.00, 2, 1, -*kStdControlGapH, 
      AutoLayout      =   Button4, 8, , 0, False, +1.00, 1, 1, 30, 
      Caption         =   "Distr."
      Enabled         =   True
      Height          =   30.0
      Left            =   210.0
      LockedInPosition=   False
      Scope           =   0
      TextColor       =   &c007AFF00
      TextFont        =   ""
      TextSize        =   0
      Top             =   290.0
      Visible         =   True
      Width           =   41.0
   End
End
#tag EndIOSView

#tag WindowCode
	#tag Event
		Sub Open()
		  system.DebugLog ImageView1.CoreAnimationLayer.AnimationKeys.toTextArray.toCommaList
		End Sub
	#tag EndEvent


	#tag Method, Flags = &h0
		Sub showvalues()
		  dim mycolors() as color
		  dim mygradient as new iOSLibCAGradientLayer (ImageView1.iOSLibView.Layer.id)
		  dim myuicolors as iOSLibArray = mygradient.Colors
		  for q as integer = 1 to myuicolors.Count
		    dim mycolor as new iOSLibCGColor (myuicolors.PtrAtIndex (q-1))
		    mycolors.Append mycolor.toColor
		  next
		  ColorField.text = mycolors.toCommaList
		  
		  dim mylocations() as double
		  dim mylocationarray as iOSLibArray = mygradient.Locations
		  if mylocationarray <> NIL then
		    for q as integer = 1 to mylocationarray.Count
		      dim mylocation as new iOSLibNumber (mylocationarray.PtrAtIndex (q-1))
		      mylocations.Append mylocation.DoubleValue
		    next
		    LocationsField.text = mylocations.toCommaList
		  end if
		  
		End Sub
	#tag EndMethod


#tag EndWindowCode

#tag Events ImageView1
	#tag Event
		Sub Open()
		  me.Alpha = 0
		  me.FadeIn (3, iOSLibView.UIVIewAnimationCurve.EaseOut)
		  me.iOSLibView.ContentMode = iOSLibView.UIViewContentMode.Center
		  // dim mypic as iOSImage = Birnebuntklein
		  // dim myimage as new iOSLibImage (mypic.Handle)
		  // me.CoreAnimationLayer.Contents =new ioslibobject ( myimage.toCGImage)
		  dim myarray() as color = array (&c394D7E00, &cDA7700ff )
		  dim myGradientLayer as new iOSLibCAgradientLayer ( me.CoreAnimationLayer.id)
		  myGradientLayer.SetColors (myarray)
		  showvalues
		End Sub
	#tag EndEvent
#tag EndEvents
#tag Events Button1
	#tag Event
		Sub Action()
		  self.Dismiss (true)
		End Sub
	#tag EndEvent
	#tag Event
		Sub Open()
		  
		End Sub
	#tag EndEvent
#tag EndEvents
#tag Events Button2
	#tag Event
		Sub Action()
		  dim colorarray() as color
		  dim myvalues() as text = ColorField.Text.Split(",")
		  for q as integer= 0 to myvalues.Ubound
		    dim newcolor as  color =  myvalues(q).Trim.tocolor
		    colorarray.Append newcolor
		  next
		  dim mygradient as new iOSLibCAGradientLayer (ImageView1.iOSLibView.Layer.id)
		  mygradient.SetColors colorarray
		End Sub
	#tag EndEvent
#tag EndEvents
#tag Events Button3
	#tag Event
		Sub Action()
		  dim locationarray() as double
		  dim myvalues() as text = LocationsField.Text.Split(",")
		  for q as integer= 0 to myvalues.Ubound
		    dim newdouble as  double =  double.Parse (myvalues(q).Trim)
		    locationarray.Append newdouble
		  next
		  dim mygradient as new iOSLibCAGradientLayer (ImageView1.iOSLibView.Layer.id)
		  mygradient.SetLocations locationarray
		End Sub
	#tag EndEvent
#tag EndEvents
#tag Events Button4
	#tag Event
		Sub Action()
		  dim mygradient as new iOSLibCAGradientLayer (ImageView1.iOSLibView.Layer.id)
		  mygradient.DistributeLocationsEvenly
		  showvalues
		End Sub
	#tag EndEvent
#tag EndEvents
#tag ViewBehavior
	#tag ViewProperty
		Name="BackButtonTitle"
		Group="Behavior"
		Type="Text"
		EditorType="MultiLineEditor"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Index"
		Visible=true
		Group="ID"
		InitialValue="-2147483648"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Left"
		Visible=true
		Group="Position"
		InitialValue="0"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Name"
		Visible=true
		Group="ID"
		Type="String"
	#tag EndViewProperty
	#tag ViewProperty
		Name="NavigationBarVisible"
		Group="Behavior"
		Type="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Super"
		Visible=true
		Group="ID"
		Type="String"
	#tag EndViewProperty
	#tag ViewProperty
		Name="TabTitle"
		Group="Behavior"
		Type="Text"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Title"
		Group="Behavior"
		Type="Text"
		EditorType="MultiLineEditor"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Top"
		Visible=true
		Group="Position"
		InitialValue="0"
		Type="Integer"
	#tag EndViewProperty
#tag EndViewBehavior
