<?xml version="1.0" encoding="UTF-8"?>
<RBProject version="2015r3" FormatVersion="2" MinIDEVersion="20140300">
<block type="Module" ID="1876031487">
 <ObjName>BitWiseExtension</ObjName>
 <ObjContainerID>1412438015</ObjContainerID>
 <IsClass>0</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>ClearBit</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ClearBit(i as UInteger, bit as integer) As uinteger</SourceLine>
   <SourceLine>if HasBit (i, bit) then</SourceLine>
   <SourceLine>dim compare as uinteger = 2 ^ bit</SourceLine>
   <SourceLine>i = i - compare</SourceLine>
   <SourceLine>return i</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>i as UInteger, bit as integer</ItemParams>
  <ItemResult>uinteger</ItemResult>
 </Method>
 <Method>
  <ItemName>HasBit</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function HasBit(i as UInteger, bit as integer) As Boolean</SourceLine>
   <SourceLine>dim compare as uinteger = 2 ^ bit</SourceLine>
   <SourceLine>return (i and compare) = compare</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>i as UInteger, bit as integer</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>SetBit</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function SetBit(i as UInteger, bit as integer) As UInteger</SourceLine>
   <SourceLine>dim compare as uinteger = 2 ^ bit</SourceLine>
   <SourceLine>return  i or compare</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>i as UInteger, bit as integer</ItemParams>
  <ItemResult>UInteger</ItemResult>
 </Method>
 <Method>
  <ItemName>ShiftLeft</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ShiftLeft(Extends I as Uinteger, bits as integer) As UInteger</SourceLine>
   <SourceLine>Return I *(2^bits)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Extends I as Uinteger, bits as integer</ItemParams>
  <ItemResult>UInteger</ItemResult>
 </Method>
 <Method>
  <ItemName>Changebit</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Changebit(i as UInteger, bit as integer, value as boolean) As uinteger</SourceLine>
   <SourceLine>dim result as uinteger</SourceLine>
   <SourceLine>if value then</SourceLine>
   <SourceLine>result = setbit(i, bit)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>result = clearbit(i, bit)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>i as UInteger, bit as integer, value as boolean</ItemParams>
  <ItemResult>uinteger</ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
</RBProject>
