<?xml version="1.0" encoding="UTF-8"?>
<RBProject version="2015r2.2" FormatVersion="2" MinIDEVersion="20140300">
<block type="Module" ID="643327999">
 <ObjName>AppleCAEmitterCell</ObjName>
 <ObjContainerID>803434495</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>AppleCAMediaTimingObject</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>Declare function emitterCell lib QuartzCore selector "emitterCell" (id as ptr) as ptr</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Calling the overridden superclass constructor.</SourceLine>
   <SourceLine>// Note that this may need modifications if there are multiple constructor choices.</SourceLine>
   <SourceLine>// Possible constructor calls:</SourceLine>
   <SourceLine>// Constructor() -- From AppleCAMediaTimingFunction</SourceLine>
   <SourceLine>// Constructor(c1x as single, c1y as single, c2x as single, c2y as single) -- From AppleCAMediaTimingFunction</SourceLine>
   <SourceLine>// Constructor(Timing as TimingFunction) -- From AppleCAMediaTimingFunction</SourceLine>
   <SourceLine>// Constructor() -- From AppleObject</SourceLine>
   <SourceLine>// Constructor(AnId as Ptr) -- From AppleObject</SourceLine>
   <SourceLine>Super.Constructor (emitterCell(ClassPtr))</SourceLine>
   <SourceLine>RetainClassObject</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>4096</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>AlphaRange</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>AlphaRange As Single</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>AlphaRange As Single</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>Declare Sub setAlphaRange lib QuartzCore selector "setAlphaRange:" (id as ptr, value as single)</SourceLine>
   <SourceLine>setAlphaRange id, value</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Declare Function alphaRange lib QuartzCore selector "alphaRange" (id as ptr) as single</SourceLine>
   <SourceLine>Return alphaRange (id)</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>AlphaSpeed</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>AlphaSpeed As Single</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>AlphaSpeed As Single</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>Declare Sub setAlphaSpeed lib QuartzCore selector "setAlphaSpeed:" (id as ptr, value as single)</SourceLine>
   <SourceLine>setAlphaSpeed id, value</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Declare Function alphaSpeed lib QuartzCore selector "alphaSpeed" (id as ptr) as single</SourceLine>
   <SourceLine>Return alphaSpeed (id)</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>BirthRate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>BirthRate As Single</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>BirthRate As Single</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>Declare Sub setBirthRate lib QuartzCore selector "setBirthRate:" (id as ptr, value as single)</SourceLine>
   <SourceLine>setBirthRate id, value</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Declare Function birthRate lib QuartzCore selector "birthRate" (id as ptr) as single</SourceLine>
   <SourceLine>Return birthRate (id)</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>BlueRange</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>BlueRange As Single</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>BlueRange As Single</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>Declare Sub setBlueRange lib QuartzCore selector "setBlueRange:" (id as ptr, value as single)</SourceLine>
   <SourceLine>setBlueRange id, value</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Declare Function blueRange lib QuartzCore selector "blueRange" (id as ptr) as single</SourceLine>
   <SourceLine>Return blueRange (id)</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>BlueSpeed</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>BlueSpeed As Single</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>BlueSpeed As Single</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>Declare Sub setBlueSpeed lib QuartzCore selector "setBlueSpeed:" (id as ptr, value as single)</SourceLine>
   <SourceLine>setBlueSpeed id, value</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Declare Function blueSpeed lib QuartzCore selector "blueSpeed" (id as ptr) as single</SourceLine>
   <SourceLine>Return blueSpeed (id)</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>ClassPtr</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared ClassPtr As Ptr</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>ClassPtr As Ptr</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>1</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>static mClassPtr as Ptr = NSClassFromString ("CAEmitterCell")</SourceLine>
   <SourceLine>return mClassPtr</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>Contents</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Contents As AppleGeneralObject</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Contents As AppleGeneralObject</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>setcontents if (value = nil, nil, value.GeneralID)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>return AppleObject.MakeFromPtr (getContents)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>EmissionRange</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>EmissionRange As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>EmissionRange As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>#if Target64bit</SourceLine>
   <SourceLine>Declare Sub setEmissionRange lib QuartzCore selector "setEmissionRange:" (id as ptr, value as double)</SourceLine>
   <SourceLine>#elseif Target32Bit</SourceLine>
   <SourceLine>Declare Sub setEmissionRange lib QuartzCore selector "setEmissionRange:" (id as ptr, value as single)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>setEmissionRange (id, value)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>#if Target64bit</SourceLine>
   <SourceLine>Declare Function emissionRange lib QuartzCore selector "emissionRange" (id as ptr) as double</SourceLine>
   <SourceLine>#elseif Target32Bit</SourceLine>
   <SourceLine>Declare Function emissionRange lib QuartzCore selector "emissionRange" (id as ptr) as single</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>Return emissionRange (id)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>EmitterCells</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>EmitterCells As AppleArray</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>EmitterCells As AppleArray</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>Declare Sub setEmitterCells lib QuartzCore selector "setEmitterCells:" (id as ptr, value as ptr)</SourceLine>
   <SourceLine>setEmitterCells id, value.id</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Declare Function emitterCells lib QuartzCore selector "emitterCells" (id as ptr) as ptr</SourceLine>
   <SourceLine>Return AppleArray.MakeFromPtr ( emitterCells (id))</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>Enabled</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Enabled As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Enabled As Boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>Declare Sub setEnabled lib QuartzCore selector "setEnabled:" (id as ptr, value as Boolean)</SourceLine>
   <SourceLine>setEnabled id, value</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Declare Function enabled lib QuartzCore selector "isEnabled" (id as ptr) as Boolean</SourceLine>
   <SourceLine>Return enabled (id)</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>GreenRange</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>GreenRange As Single</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>GreenRange As Single</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>Declare Sub setGreenRange lib QuartzCore selector "setGreenRange:" (id as ptr, value as single)</SourceLine>
   <SourceLine>setGreenRange id, value</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Declare Function greenRange lib QuartzCore selector "greenRange" (id as ptr) as single</SourceLine>
   <SourceLine>Return greenRange (id)</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>GreenSpeed</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>GreenSpeed As Single</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>GreenSpeed As Single</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>Declare Sub setGreenSpeed lib QuartzCore selector "setGreenSpeed:" (id as ptr, value as single)</SourceLine>
   <SourceLine>setGreenSpeed id, value</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Declare Function greenSpeed lib QuartzCore selector "greenSpeed" (id as ptr) as single</SourceLine>
   <SourceLine>Return greenSpeed (id)</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>LifeTime</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>LifeTime As Single</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>LifeTime As Single</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>Declare Sub setLifetime lib QuartzCore selector "setLifetime:" (id as ptr, value as single)</SourceLine>
   <SourceLine>setLifetime id, value</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Declare Function lifetime lib QuartzCore selector "lifetime" (id as ptr) as single</SourceLine>
   <SourceLine>Return lifetime (id)</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>LifeTimeRange</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>LifeTimeRange As Single</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>LifeTimeRange As Single</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>Declare Sub setLifetimeRange lib QuartzCore selector "setLifetimeRange:" (id as ptr, value as single)</SourceLine>
   <SourceLine>setLifetimeRange id, value</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Declare Function lifetimeRange lib QuartzCore selector "lifetimeRange" (id as ptr) as single</SourceLine>
   <SourceLine>Return lifetimeRange (id)</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>Name</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Name As Text</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Name As Text</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>AppleObject.setName value</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>return AppleObject.getName</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>RedRange</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>RedRange As Single</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>RedRange As Single</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>Declare Sub setRedRange lib QuartzCore selector "setRedRange:" (id as ptr, value as single)</SourceLine>
   <SourceLine>setRedRange id, value</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Declare Function redRange lib QuartzCore selector "redRange" (id as ptr) as single</SourceLine>
   <SourceLine>Return redRange (id)</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>RedSpeed</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>RedSpeed As Single</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>RedSpeed As Single</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>Declare Sub setRedSpeed lib QuartzCore selector "setRedSpeed:" (id as ptr, value as single)</SourceLine>
   <SourceLine>setRedSpeed id, value</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Declare Function redSpeed lib QuartzCore selector "redSpeed" (id as ptr) as single</SourceLine>
   <SourceLine>Return redSpeed (id)</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>Scale</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Scale As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Scale As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>#if Target64bit</SourceLine>
   <SourceLine>Declare Sub setScale lib QuartzCore selector "setScale:" (id as ptr, value as double)</SourceLine>
   <SourceLine>#elseif Target32Bit</SourceLine>
   <SourceLine>Declare Sub setScale lib QuartzCore selector "setScale:" (id as ptr, value as single)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>setscale (id, value)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>#if Target64bit</SourceLine>
   <SourceLine>Declare Function scale lib QuartzCore selector "scale" (id as ptr) as double</SourceLine>
   <SourceLine>#elseif Target32Bit</SourceLine>
   <SourceLine>Declare Function scale lib QuartzCore selector "scale" (id as ptr) as single</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>Return scale (id)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>ScaleRange</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>ScaleRange As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>ScaleRange As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>#if Target64bit</SourceLine>
   <SourceLine>Declare Sub setScaleRange lib QuartzCore selector "setScaleRange:" (id as ptr, value as double)</SourceLine>
   <SourceLine>#elseif Target32Bit</SourceLine>
   <SourceLine>Declare Sub setScaleRange lib QuartzCore selector "setScaleRange:" (id as ptr, value as single)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>setScaleRange (id, value)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>#if Target64bit</SourceLine>
   <SourceLine>Declare Function ScaleRange lib QuartzCore selector "scaleRange" (id as ptr) as double</SourceLine>
   <SourceLine>#elseif Target32Bit</SourceLine>
   <SourceLine>Declare Function ScaleRange lib QuartzCore selector "scaleRange" (id as ptr) as single</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>Return ScaleRange (id)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>ScaleSpeed</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>ScaleSpeed As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>ScaleSpeed As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>#if Target64bit</SourceLine>
   <SourceLine>Declare Sub setScaleSpeed lib QuartzCore selector "setScaleSpeed:" (id as ptr, value as double)</SourceLine>
   <SourceLine>#elseif Target32Bit</SourceLine>
   <SourceLine>Declare Sub setScaleSpeed lib QuartzCore selector "setScaleSpeed:" (id as ptr, value as single)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>setScaleSpeed (id, value)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>#if Target64bit</SourceLine>
   <SourceLine>Declare Function scaleSpeed lib QuartzCore selector "scaleSpeed" (id as ptr) as double</SourceLine>
   <SourceLine>#elseif Target32Bit</SourceLine>
   <SourceLine>Declare Function scaleSpeed lib QuartzCore selector "scaleSpeed" (id as ptr) as single</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>Return ScaleSpeed (id)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>Spin</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Spin As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Spin As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>#if Target64bit</SourceLine>
   <SourceLine>Declare Sub setSpin lib QuartzCore selector "setSpin:" (id as ptr, value as double)</SourceLine>
   <SourceLine>#elseif Target32Bit</SourceLine>
   <SourceLine>Declare Sub setSpin lib QuartzCore selector "setSpin:" (id as ptr, value as single)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>setSpin (id, value)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>#if Target64bit</SourceLine>
   <SourceLine>Declare Function spin lib QuartzCore selector "spin" (id as ptr) as double</SourceLine>
   <SourceLine>#elseif Target32Bit</SourceLine>
   <SourceLine>Declare Function spin lib QuartzCore selector "spin" (id as ptr) as single</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>Return spin (id)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>SpinRange</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>SpinRange As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>SpinRange As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>#if Target64bit</SourceLine>
   <SourceLine>Declare Sub setSpinRange lib QuartzCore selector "setSpinRange:" (id as ptr, value as double)</SourceLine>
   <SourceLine>#elseif Target32Bit</SourceLine>
   <SourceLine>Declare Sub setSpinRange lib QuartzCore selector "setSpinRange:" (id as ptr, value as single)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>setSpinRange (id, value)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>#if Target64bit</SourceLine>
   <SourceLine>Declare Function spinRange lib QuartzCore selector "spinRange" (id as ptr) as double</SourceLine>
   <SourceLine>#elseif Target32Bit</SourceLine>
   <SourceLine>Declare Function spinRange lib QuartzCore selector "spinRange" (id as ptr) as single</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>Return spinRange (id)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>Velocity</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Velocity As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Velocity As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>#if Target64bit</SourceLine>
   <SourceLine>Declare Sub setVelocity lib QuartzCore selector "setVelocity:" (id as ptr, value as double)</SourceLine>
   <SourceLine>#elseif Target32Bit</SourceLine>
   <SourceLine>Declare Sub setVelocity lib QuartzCore selector "setVelocity:" (id as ptr, value as single)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>setVelocity (id, value)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>#if Target64bit</SourceLine>
   <SourceLine>Declare Function velocity lib QuartzCore selector "velocity" (id as ptr) as double</SourceLine>
   <SourceLine>#elseif Target32Bit</SourceLine>
   <SourceLine>Declare Function velocity lib QuartzCore selector "velocity" (id as ptr) as single</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>Return velocity (id)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>VelocityRange</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>VelocityRange As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>VelocityRange As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>#if Target64bit</SourceLine>
   <SourceLine>Declare Sub setVelocityRange lib QuartzCore selector "setVelocityRange:" (id as ptr, value as double)</SourceLine>
   <SourceLine>#elseif Target32Bit</SourceLine>
   <SourceLine>Declare Sub setVelocityRange lib QuartzCore selector "setVelocityRange:" (id as ptr, value as single)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>setVelocityrange (id, value)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>#if Target64bit</SourceLine>
   <SourceLine>Declare Function velocityRange lib QuartzCore selector "velocityRange" (id as ptr) as double</SourceLine>
   <SourceLine>#elseif Target32Bit</SourceLine>
   <SourceLine>Declare Function velocityRange lib QuartzCore selector "velocityRange" (id as ptr) as single</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>Return VelocityRange (id)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>XAcceleration</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>XAcceleration As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>XAcceleration As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>#if Target64bit</SourceLine>
   <SourceLine>Declare Sub setXAcceleration lib QuartzCore selector "setXAcceleration:" (id as ptr, value as double)</SourceLine>
   <SourceLine>#elseif Target32Bit</SourceLine>
   <SourceLine>Declare Sub setXAcceleration lib QuartzCore selector "setXAcceleration:" (id as ptr, value as single)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>setXAcceleration (id, value)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>#if Target64bit</SourceLine>
   <SourceLine>Declare Function xAcceleration lib QuartzCore selector "xAcceleration" (id as ptr) as double</SourceLine>
   <SourceLine>#elseif Target32Bit</SourceLine>
   <SourceLine>Declare Function xAcceleration lib QuartzCore selector "xAcceleration" (id as ptr) as single</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>Return xAcceleration (id)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>YAcceleration</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>YAcceleration As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>YAcceleration As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>#if Target64bit</SourceLine>
   <SourceLine>Declare Sub setYAcceleration lib QuartzCore selector "setYAcceleration:" (id as ptr, value as double)</SourceLine>
   <SourceLine>#elseif Target32Bit</SourceLine>
   <SourceLine>Declare Sub setYAcceleration lib QuartzCore selector "setYAcceleration:" (id as ptr, value as single)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>setYAcceleration (id, value)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>#if Target64bit</SourceLine>
   <SourceLine>Declare Function yAcceleration lib QuartzCore selector "yAcceleration" (id as ptr) as double</SourceLine>
   <SourceLine>#elseif Target32Bit</SourceLine>
   <SourceLine>Declare Function yAcceleration lib QuartzCore selector "yAcceleration" (id as ptr) as single</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>Return yAcceleration (id)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>ZAcceleration</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>ZAcceleration As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>ZAcceleration As Double</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>#if Target64bit</SourceLine>
   <SourceLine>Declare Sub setZAcceleration lib QuartzCore selector "setZAcceleration:" (id as ptr, value as double)</SourceLine>
   <SourceLine>#elseif Target32Bit</SourceLine>
   <SourceLine>Declare Sub setZAcceleration lib QuartzCore selector "setZAcceleration:" (id as ptr, value as single)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>setZAcceleration (id, value)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>#if Target64bit</SourceLine>
   <SourceLine>Declare Function zAcceleration lib QuartzCore selector "zAcceleration" (id as ptr) as double</SourceLine>
   <SourceLine>#elseif Target32Bit</SourceLine>
   <SourceLine>Declare Function zAcceleration lib QuartzCore selector "zAcceleration" (id as ptr) as single</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>Return zAcceleration (id)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Description</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Text</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>isProxy</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>DebugDescription</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Text</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>HasOwnership</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Hidden</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>IsNIL</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>mHasOwnership</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Autoreverses</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>BeginTime</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Duration</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>FillMode</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>FillModes</ItemType>
   <EditorType>Enum</EditorType>
   <Enumeration>
    <ItemDef>0 - Remove</ItemDef>
    <ItemDef>1 - Remain</ItemDef>
    <ItemDef>2 - Reset</ItemDef>
    <ItemDef>3 - Both</ItemDef>
   </Enumeration>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MagnificationFilter</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>ScalingFilters</ItemType>
   <EditorType>Enum</EditorType>
   <Enumeration>
    <ItemDef>0 - Linear</ItemDef>
    <ItemDef>1 - Nearest</ItemDef>
    <ItemDef>2 - Trilinear</ItemDef>
   </Enumeration>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MinificationFilter</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>ScalingFilters</ItemType>
   <EditorType>Enum</EditorType>
   <Enumeration>
    <ItemDef>0 - Linear</ItemDef>
    <ItemDef>1 - Nearest</ItemDef>
    <ItemDef>2 - Trilinear</ItemDef>
   </Enumeration>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MinificationFilterBias</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Single</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>RepeatCount</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Single</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>RepeatDuration</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Speed</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Single</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TimeOffset</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>AlphaRange</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Single</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>AlphaSpeed</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Single</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>BirthRate</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Single</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>BlueRange</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Single</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>BlueSpeed</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Single</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>EmissionRange</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Enabled</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>GreenRange</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Single</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>GreenSpeed</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Single</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LifeTime</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Single</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LifeTimeRange</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Single</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>RedRange</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Single</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>RedSpeed</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Single</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Scale</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ScaleRange</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ScaleSpeed</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Spin</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>SpinRange</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Velocity</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>VelocityRange</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>XAcceleration</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>YAcceleration</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ZAcceleration</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
</RBProject>
