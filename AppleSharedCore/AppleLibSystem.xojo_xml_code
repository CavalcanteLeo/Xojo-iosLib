<?xml version="1.0" encoding="UTF-8"?>
<RBProject version="2015r3" FormatVersion="2" MinIDEVersion="20140300">
<block type="Module" ID="2128969727">
 <ObjName>AppleLibSystem</ObjName>
 <ObjContainerID>1906847743</ObjContainerID>
 <IsClass>0</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>DataPointerforName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function DataPointerforName(name as CFStringRef, frameworkID as CFStringRef, suppressException as boolean = false) As Ptr</SourceLine>
   <SourceLine>// Implementation courtesy of Jim McKay, with additions from Jason King</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim framework As new AppleCFBundle (frameworkID)</SourceLine>
   <SourceLine>if framework.isnil then // Used to be Return NIL, but there are some FWs without identifier in my simulator, so let's try them</SourceLine>
   <SourceLine>dim identifier as text = frameworkID</SourceLine>
   <SourceLine>dim sections() as text = identifier.Split(".")</SourceLine>
   <SourceLine>dim compare as text = sections (sections.Ubound)</SourceLine>
   <SourceLine>for q as integer = 0 to AppleCFBundle.MainBundle.AllBundles.Count -1</SourceLine>
   <SourceLine>dim bundle as new AppleCFBundle (AppleCFBundle.MainBundle.AllBundles.PtrAtIndex (q))</SourceLine>
   <SourceLine>if bundle.Description.IndexOf (compare) &gt; -1 then</SourceLine>
   <SourceLine>framework= bundle</SourceLine>
   <SourceLine>exit for</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>if framework.isnil then // still haven't got it; try to load it now:</SourceLine>
   <SourceLine>call AppleLibSystem.LoadFramework (compare, suppressException)</SourceLine>
   <SourceLine>framework = new AppleCFBundle (frameworkID)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not FrameWork.ExecutableIsLoaded then //bundle is not loaded</SourceLine>
   <SourceLine>if not FrameWork.Load then  //try to load it</SourceLine>
   <SourceLine>//fail</SourceLine>
   <SourceLine>Return nil</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return framework.DataPtrForName (name) //lookup the constant</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>name as CFStringRef, frameworkID as CFStringRef, suppressException as boolean = false</ItemParams>
  <ItemResult>Ptr</ItemResult>
 </Method>
 <ExternalMethod>
  <ItemName>dlerror</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Declare Function dlerror Lib libsystem () As CString</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>CString</ItemResult>
  <LibraryName>#libsystem</LibraryName>
  <SoftLink>0</SoftLink>
 </ExternalMethod>
 <ExternalMethod>
  <ItemName>dlopen</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Declare Function dlopen Lib libsystem (framework As cstring, flag as int32) As ptr</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>framework As cstring, flag as int32</ItemParams>
  <ItemResult>ptr</ItemResult>
  <LibraryName>#libsystem</LibraryName>
  <SoftLink>0</SoftLink>
 </ExternalMethod>
 <ExternalMethod>
  <ItemName>free</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Declare Sub free Lib libsystem (p As cstring)</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>p As cstring</ItemParams>
  <ItemResult></ItemResult>
  <LibraryName>#libsystem</LibraryName>
  <SoftLink>0</SoftLink>
 </ExternalMethod>
 <ExternalMethod>
  <ItemName>free</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Declare Sub free Lib libsystem (p As Ptr)</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>p As Ptr</ItemParams>
  <ItemResult></ItemResult>
  <LibraryName>#libsystem</LibraryName>
  <SoftLink>0</SoftLink>
 </ExternalMethod>
 <Method>
  <ItemName>LoadFramework</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function LoadFramework(name as text, suppressException As Boolean = false) As boolean</SourceLine>
   <SourceLine>dim path as Text =  "/System/Library/Frameworks/" + name + ".framework/" + name</SourceLine>
   <SourceLine>Dim result As Ptr = dlopen(path.ToCString, 1 Or 8)</SourceLine>
   <SourceLine>If result = Nil Then</SourceLine>
   <SourceLine>if not suppressException then</SourceLine>
   <SourceLine>Dim reason As Text = Text.FromCString(dlerror(), Xojo.Core.TextEncoding.UTF8)</SourceLine>
   <SourceLine>Dim exc As New Xojo.Core.InvalidArgumentException</SourceLine>
   <SourceLine>exc.Reason = reason</SourceLine>
   <SourceLine>Raise exc</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>name as text, suppressException As Boolean = false</ItemParams>
  <ItemResult>boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>SystemConstantName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function SystemConstantName(name as CFStringRef, frameworkPath as CFStringRef) As text</SourceLine>
   <SourceLine>Return DataPointerforName (name, frameworkPath).cfstringref(0)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>name as CFStringRef, frameworkPath as CFStringRef</ItemParams>
  <ItemResult>text</ItemResult>
 </Method>
 <Method>
  <ItemName>MakeException</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub MakeException(ErrorText as Text)</SourceLine>
   <SourceLine>dim err as new xojo.Core.ErrorException</SourceLine>
   <SourceLine>err.Reason = ErrorText</SourceLine>
   <SourceLine>raise Err</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ErrorText as Text</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <ExternalMethod>
  <ItemName>malloc</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Declare Function malloc Lib libsystem (capacity as integer) As Ptr</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>capacity as integer</ItemParams>
  <ItemResult>Ptr</ItemResult>
  <LibraryName>#libsystem</LibraryName>
  <SoftLink>0</SoftLink>
 </ExternalMethod>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
 <Constant>
  <ItemName>LibSystem</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>6</ItemType>
  <ItemDef>/usr/lib/libSystem.B.dylib</ItemDef>
  <ItemFlags>33</ItemFlags>
 </Constant>
</block>
</RBProject>
