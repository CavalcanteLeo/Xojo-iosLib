<?xml version="1.0" encoding="UTF-8"?>
<RBProject version="2015r3" FormatVersion="2" MinIDEVersion="20140300">
<block type="Module" ID="1596241919">
 <ObjName>AppleMutableArray</ObjName>
 <ObjContainerID>308434943</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>AppleArray</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Addobject</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Addobject(anObject as AppleGeneralObject)</SourceLine>
   <SourceLine>AddPtr anObject.GeneralID</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>anObject as AppleGeneralObject</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>AddPtr</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub AddPtr(anObject as Ptr)</SourceLine>
   <SourceLine>Declare Sub addObject lib foundation selector "addObject:" (id as ptr, value as ptr)</SourceLine>
   <SourceLine>addObject (id, anObject)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>anObject as Ptr</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>AddText</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub AddText(aText as CFStringREf)</SourceLine>
   <SourceLine>Declare Sub addObject lib foundation selector "addObject:" (id as ptr, value as cfstringref)</SourceLine>
   <SourceLine>addObject (id, atext)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>aText as CFStringREf</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>CGColorArray</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine> Shared Function CGColorArray(colorarray() as Color) As AppleMutableArray</SourceLine>
   <SourceLine>dim count as uinteger = colorArray.Ubound</SourceLine>
   <SourceLine>dim myarray as new AppleMutableArray (count + 1)</SourceLine>
   <SourceLine>for q as uinteger = 0 to count</SourceLine>
   <SourceLine>myarray.AddPtr AppleCGColor.fromColor(ColorArray(q)).CFTypeRef</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>return myarray</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>colorarray() as Color</ItemParams>
  <ItemResult>AppleMutableArray</ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>// Calling the overridden superclass constructor.</SourceLine>
   <SourceLine>// Note that this may need modifications if there are multiple constructor choices.</SourceLine>
   <SourceLine>// Possible constructor calls:</SourceLine>
   <SourceLine>// Constructor() -- From AppleObject</SourceLine>
   <SourceLine>// Constructor(AnId as Ptr) -- From AppleObject</SourceLine>
   <SourceLine>Super.Constructor (Init(Alloc(ClassPtr)))</SourceLine>
   <SourceLine>mHasOwnership = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>4096</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(Capacity as uinteger)</SourceLine>
   <SourceLine>// Calling the overridden superclass constructor.</SourceLine>
   <SourceLine>// Note that this may need modifications if there are multiple constructor choices.</SourceLine>
   <SourceLine>// Possible constructor calls:</SourceLine>
   <SourceLine>// Constructor() -- From AppleObject</SourceLine>
   <SourceLine>// Constructor(AnId as Ptr) -- From AppleObject</SourceLine>
   <SourceLine>Super.Constructor (doinitwithcapacity(Alloc(ClassPtr), Capacity))</SourceLine>
   <SourceLine>mhasownership = true</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>4096</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Capacity as uinteger</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>fromGeneralObjects</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine> Shared Function fromGeneralObjects(paramarray objects() as AppleGeneralObject) As AppleMutableArray</SourceLine>
   <SourceLine>dim count as uinteger = objects.Ubound</SourceLine>
   <SourceLine>dim myarray as new AppleMutableArray (count + 1)</SourceLine>
   <SourceLine>for q as uinteger = 0 to count</SourceLine>
   <SourceLine>myarray.AddPtr objects(q).GeneralID</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>return myarray</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>paramarray objects() as AppleGeneralObject</ItemParams>
  <ItemResult>AppleMutableArray</ItemResult>
 </Method>
 <Method>
  <ItemName>fromGeneralObjects</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine> Shared Function fromGeneralObjects(objects() as AppleGeneralObject) As AppleMutableArray</SourceLine>
   <SourceLine>dim count as uinteger = objects.Ubound</SourceLine>
   <SourceLine>dim myarray as new AppleMutableArray (count + 1)</SourceLine>
   <SourceLine>for q as uinteger = 0 to count</SourceLine>
   <SourceLine>myarray.AddPtr objects(q).GeneralID</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>return myarray</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>objects() as AppleGeneralObject</ItemParams>
  <ItemResult>AppleMutableArray</ItemResult>
 </Method>
 <Method>
  <ItemName>fromAppleObjects</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine> Shared Function fromAppleObjects(paramarray objects() as AppleObject) As AppleMutableArray</SourceLine>
   <SourceLine>dim count as uinteger = objects.Ubound</SourceLine>
   <SourceLine>dim myarray as new AppleMutableArray (count + 1)</SourceLine>
   <SourceLine>for q as uinteger = 0 to count</SourceLine>
   <SourceLine>myarray.AddPtr objects(q).id</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>return myarray</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>paramarray objects() as AppleObject</ItemParams>
  <ItemResult>AppleMutableArray</ItemResult>
 </Method>
 <Method>
  <ItemName>fromAppleObjects</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine> Shared Function fromAppleObjects(objects() as AppleObject) As AppleMutableArray</SourceLine>
   <SourceLine>dim count as uinteger = objects.Ubound</SourceLine>
   <SourceLine>dim myarray as new AppleMutableArray (count + 1)</SourceLine>
   <SourceLine>for q as uinteger = 0 to count</SourceLine>
   <SourceLine>myarray.AddPtr objects(q).id</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>return myarray</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>objects() as AppleObject</ItemParams>
  <ItemResult>AppleMutableArray</ItemResult>
 </Method>
 <Method>
  <ItemName>NSPointArray</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine> Shared Function NSPointArray(Pointarray() as NSPOint) As AppleMutableArray</SourceLine>
   <SourceLine>dim count as uinteger = pointarray.Ubound + 1</SourceLine>
   <SourceLine>dim myarray as new AppleMutableArray (count)</SourceLine>
   <SourceLine>for q as uinteger = 1 to count</SourceLine>
   <SourceLine>myarray.Addobject new AppleValue (pointarray(q -1))</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>return myarray</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>Pointarray() as NSPOint</ItemParams>
  <ItemResult>AppleMutableArray</ItemResult>
 </Method>
 <Method>
  <ItemName>NumberArray</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine> Shared Function NumberArray(NumberArray() as Double) As AppleMutableArray</SourceLine>
   <SourceLine>dim count as uinteger = NumberArray.Ubound</SourceLine>
   <SourceLine>dim myarray as new AppleMutableArray (count + 1)</SourceLine>
   <SourceLine>for q as uinteger = 0 to count</SourceLine>
   <SourceLine>dim mynumber as new AppleNumber (NumberArray(q))</SourceLine>
   <SourceLine>myarray.Addobject mynumber</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>return myarray</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>NumberArray() as Double</ItemParams>
  <ItemResult>AppleMutableArray</ItemResult>
 </Method>
 <Method>
  <ItemName>RemoveObjectAtIndex</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub RemoveObjectAtIndex(Index as uinteger)</SourceLine>
   <SourceLine>Declare sub removeObjectAtIndex lib Foundation selector "removeObjectAtIndex:" (id as ptr, index as uinteger)</SourceLine>
   <SourceLine>removeObjectAtIndex id, index</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Index as uinteger</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>ClassPtr</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared ClassPtr As Ptr</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>ClassPtr As Ptr</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>1</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>static mClassPtr as Ptr = NSClassFromString ("NSMutableArray")</SourceLine>
   <SourceLine>return mClassPtr</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Description</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Text</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>isProxy</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>DebugDescription</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Text</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>HasOwnership</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>IsNIL</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>mHasOwnership</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
</RBProject>
