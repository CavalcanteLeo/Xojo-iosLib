<?xml version="1.0" encoding="UTF-8"?>
<RBProject version="2015r3" FormatVersion="2" MinIDEVersion="20140300">
<block type="Module" ID="1171767295">
 <ObjName>AppleObject</ObjName>
 <ObjContainerID>308434943</ObjContainerID>
 <IsClass>1</IsClass>
 <Interfaces>AppleGeneralObject</Interfaces>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Alloc</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine> Shared Function Alloc(aClass as Ptr) As ptr</SourceLine>
   <SourceLine>declare function alloc lib Foundation selector "alloc" (id as ptr) as ptr</SourceLine>
   <SourceLine>return alloc (aclass)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>aClass as Ptr</ItemParams>
  <ItemResult>ptr</ItemResult>
 </Method>
 <Method>
  <ItemName>AutoRelease</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub AutoRelease()</SourceLine>
   <SourceLine>mid = AutoRelease(mid)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>AutoRelease</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine> Shared Function AutoRelease(id as ptr) As Ptr</SourceLine>
   <SourceLine>declare function autorelease lib Foundation selector "autorelease" (id as ptr) as ptr</SourceLine>
   <SourceLine>return autorelease (id)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>id as ptr</ItemParams>
  <ItemResult>Ptr</ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>mid = CreateInstance (ClassPtr)</SourceLine>
   <SourceLine>RetainClassObject</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(AnId as Ptr)</SourceLine>
   <SourceLine>mid = anid</SourceLine>
   <SourceLine>if not IsNIL then</SourceLine>
   <SourceLine>// system.DebugLog "Created "+me.DebugDescription</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>system.DebugLog "Error creating Object â€“ method returned NIL"</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>AnId as Ptr</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>CreateInstance</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function CreateInstance(aClass as Ptr) As ptr</SourceLine>
   <SourceLine>declare function new_ lib Foundation selector "new" (id as ptr) as ptr</SourceLine>
   <SourceLine>return new_ (aclass)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>aClass as Ptr</ItemParams>
  <ItemResult>ptr</ItemResult>
 </Method>
 <Method>
  <ItemName>DeAlloc</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub DeAlloc()</SourceLine>
   <SourceLine>declare sub dealloc lib Foundation selector "dealloc" (id as ptr)</SourceLine>
   <SourceLine>dealloc (mid)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>DeAlloc</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine> Shared Sub DeAlloc(id as ptr)</SourceLine>
   <SourceLine>declare sub dealloc lib Foundation selector "dealloc" (id as ptr)</SourceLine>
   <SourceLine>dealloc (id)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>id as ptr</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Destructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Destructor()</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mHasOwnership then</SourceLine>
   <SourceLine>if LibDebug then system.DebugLog "Releasing "+DebugDescription+" AR: "+RetainCount.totext</SourceLine>
   <SourceLine>autoRelease</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>// system.DebugLog "Losing Handle on "+DebugDescription+" AR: "+RetainCount.totext</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>GeneralID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GeneralID() As Ptr</SourceLine>
   <SourceLine>// Part of the AppleGeneralObject interface.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return mid</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Ptr</ItemResult>
 </Method>
 <Method>
  <ItemName>getCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function getCount() As UInteger</SourceLine>
   <SourceLine>Declare Function count lib Foundation selector "count" (id as ptr) as UInteger</SourceLine>
   <SourceLine>Return count (id)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>UInteger</ItemResult>
 </Method>
 <Method>
  <ItemName>getDelegate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function getDelegate() As Ptr</SourceLine>
   <SourceLine>Declare Function getDelegate lib Foundation selector "delegate" (id as ptr) as Ptr</SourceLine>
   <SourceLine>dim result as new AppleObject (  getDelegate (id))</SourceLine>
   <SourceLine>if not result.IsNIL then</SourceLine>
   <SourceLine>result.Retain</SourceLine>
   <SourceLine>call AutoRelease result.id</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>return result.id</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Ptr</ItemResult>
 </Method>
 <Method>
  <ItemName>getName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function getName() As Text</SourceLine>
   <SourceLine>Declare function name lib Foundation selector "name" (id as ptr) as CFStringRef</SourceLine>
   <SourceLine>return name (id)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Text</ItemResult>
 </Method>
 <Method>
  <ItemName>getSize</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function getSize() As NSSize</SourceLine>
   <SourceLine>#if Target64Bit</SourceLine>
   <SourceLine>Declare function size lib Foundation selector "size" (id as ptr) as NSSize</SourceLine>
   <SourceLine>return size (id)</SourceLine>
   <SourceLine>#elseif Target32Bit</SourceLine>
   <SourceLine>Declare function size lib Foundation selector "size" (id as ptr) as NSSize32Bit</SourceLine>
   <SourceLine>return size(id).toNSSize</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>NSSize</ItemResult>
 </Method>
 <Method>
  <ItemName>getTitle</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function getTitle() As Text</SourceLine>
   <SourceLine>Declare Function title lib Foundation selector "title" (id as ptr) as CFStringRef</SourceLine>
   <SourceLine>Return title (id)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Text</ItemResult>
 </Method>
 <Method>
  <ItemName>Init</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function Init(anId as ptr) As Ptr</SourceLine>
   <SourceLine>declare function init lib Foundation selector "init" (id as ptr) as ptr</SourceLine>
   <SourceLine>return init (anId)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>anId as ptr</ItemParams>
  <ItemResult>Ptr</ItemResult>
 </Method>
 <Method>
  <ItemName>MakeFromPtr</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine> Shared Function MakeFromPtr(aPtr as Ptr) As AppleObject</SourceLine>
   <SourceLine>return if (aptr &lt;&gt; NIL, new AppleObject (aptr), NIL)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>aPtr as Ptr</ItemParams>
  <ItemResult>AppleObject</ItemResult>
 </Method>
 <Method>
  <ItemName>Release</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Release()</SourceLine>
   <SourceLine>declare Sub release lib Foundation selector "release" (id as ptr)</SourceLine>
   <SourceLine>release (mid)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Retain</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Retain()</SourceLine>
   <SourceLine>declare function retain lib Foundation selector "retain" (id as ptr) as ptr</SourceLine>
   <SourceLine>call retain (mid)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>RetainClassObject</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub RetainClassObject()</SourceLine>
   <SourceLine>Retain</SourceLine>
   <SourceLine>mhasownership = true</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>setDelegate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub setDelegate(value as Ptr)</SourceLine>
   <SourceLine>Declare Sub setDelegate lib Foundation selector "setDelegate:" (id as ptr, value as Ptr)</SourceLine>
   <SourceLine>setDelegate (id, value)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>value as Ptr</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>setName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub setName(Name as cfstringref)</SourceLine>
   <SourceLine>Declare Sub setName lib Foundation selector "setName:" (id as ptr, value as CFStringRef)</SourceLine>
   <SourceLine>setName (id, Name)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Name as cfstringref</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>setSize</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub setSize(value as nssize)</SourceLine>
   <SourceLine>#if Target64Bit</SourceLine>
   <SourceLine>Declare sub setSize lib Foundation selector "setSize:" (id as ptr, value as NSSize)</SourceLine>
   <SourceLine>setSize id, value</SourceLine>
   <SourceLine>#elseif Target32Bit</SourceLine>
   <SourceLine>Declare sub setSize lib Foundation selector "setSize:" (id as ptr, value as NSSize32Bit)</SourceLine>
   <SourceLine>setSize id, value.toNSSize32</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>value as nssize</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>setTitle</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub setTitle(Title as cfstringref)</SourceLine>
   <SourceLine>Declare Sub setTitle lib Foundation selector "setTitle:" (id as ptr, value as CFStringRef)</SourceLine>
   <SourceLine>settitle (id, title)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Title as cfstringref</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>setValueForKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub setValueForKey(Key as CFStringRef, value as AppleGeneralObject)</SourceLine>
   <SourceLine>Declare sub setValueForKey lib Foundation selector "setValue:forKey:" (id as ptr, value as ptr, Key as CFStringRef)</SourceLine>
   <SourceLine>setValueForKey (id, value.GeneralID, Key)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Key as CFStringRef, value as AppleGeneralObject</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>setValueForKeyPath</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub setValueForKeyPath(KeyPath as CFStringRef, value as AppleGeneralObject)</SourceLine>
   <SourceLine>Declare sub setValueForKeyPath lib Foundation selector "setValue:forKeyPath:" (id as ptr, value as ptr, KeyPath as CFStringRef)</SourceLine>
   <SourceLine>setValueForKeyPath (id, value.GeneralID, KeyPath)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>KeyPath as CFStringRef, value as AppleGeneralObject</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ValueForKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ValueForKey(Key as CFStringRef) As ptr</SourceLine>
   <SourceLine>Declare Function ValueForKey lib Foundation selector "valueForKey:" (id as ptr, KeyPath as CFStringRef) as ptr</SourceLine>
   <SourceLine>return ValueForKey (id, Key)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Key as CFStringRef</ItemParams>
  <ItemResult>ptr</ItemResult>
 </Method>
 <Method>
  <ItemName>ValueForKeyPath</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ValueForKeyPath(KeyPath as CFStringRef) As Ptr</SourceLine>
   <SourceLine>Declare Function ValueForKeyPath lib Foundation selector "valueForKeyPath:" (id as ptr, KeyPath as CFStringRef) as ptr</SourceLine>
   <SourceLine>return ValueForKeyPath (id, KeyPath)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>KeyPath as CFStringRef</ItemParams>
  <ItemResult>Ptr</ItemResult>
 </Method>
 <Method>
  <ItemName>CancelPreviousPerformRequests</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub CancelPreviousPerformRequests()</SourceLine>
   <SourceLine>#if targetmacos</SourceLine>
   <SourceLine>Declare Sub cancelPreviousPerformRequestsWithTarget lib Foundation selector "cancelPreviousPerformRequestsWithTarget:" (id as ptr, target as ptr)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>cancelPreviousPerformRequestsWithTarget classptr, id</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ClassMethodImplementationForSelector</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ClassMethodImplementationForSelector(aSelector as cfstringref) As Ptr</SourceLine>
   <SourceLine>return ClassMethodImplementationForSelector (NSSelectorFromString(aSelector))</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>aSelector as cfstringref</ItemParams>
  <ItemResult>Ptr</ItemResult>
 </Method>
 <Method>
  <ItemName>ClassMethodImplementationForSelector</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ClassMethodImplementationForSelector(aSelector as Ptr) As Ptr</SourceLine>
   <SourceLine>#if targetmacos</SourceLine>
   <SourceLine>declare function methodForSelector lib Foundation selector "methodForSelector:" (id as Ptr, aselector as Ptr) as Ptr</SourceLine>
   <SourceLine>return methodForSelector (class_, aSelector)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>aSelector as Ptr</ItemParams>
  <ItemResult>Ptr</ItemResult>
 </Method>
 <Method>
  <ItemName>ConformsToProtocol</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ConformsToProtocol(aProtocol as AppleProtocol) As Boolean</SourceLine>
   <SourceLine>return conformsToProtocol (aProtocol.Id)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>aProtocol as AppleProtocol</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>ConformsToProtocol</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ConformsToProtocol(aProtocol as Ptr) As Boolean</SourceLine>
   <SourceLine>#if targetmacos</SourceLine>
   <SourceLine>Declare function conformsToProtocol lib Foundation selector "conformsToProtocol:" (id as ptr, aProtocol as Ptr) as Boolean</SourceLine>
   <SourceLine>return conformsToProtocol (id, aProtocol)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>aProtocol as Ptr</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Equals</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Equals(anotherObject as AppleObject) As boolean</SourceLine>
   <SourceLine>return Equals (anotherObject.id)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>anotherObject as AppleObject</ItemParams>
  <ItemResult>boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Equals</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Equals(anotherid as ptr) As boolean</SourceLine>
   <SourceLine>declare function isEqual lib Foundation selector "isEqual:" (id as Ptr, anotherId as ptr) as Boolean</SourceLine>
   <SourceLine>return isEqual (ID, anotherid)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>anotherid as ptr</ItemParams>
  <ItemResult>boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>MethodSignatureForSelector</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine> Shared Function MethodSignatureForSelector(aSelector as cfstringref) As AppleMethodSignature</SourceLine>
   <SourceLine>return MacOSMethodSignatureForSelector (NSSelectorFromString(aSelector))</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>aSelector as cfstringref</ItemParams>
  <ItemResult>AppleMethodSignature</ItemResult>
 </Method>
 <Method>
  <ItemName>MacOSMethodSignatureForSelector</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine> Shared Function MacOSMethodSignatureForSelector(aSelector as Ptr) As AppleMethodSignature</SourceLine>
   <SourceLine>#if targetmacos</SourceLine>
   <SourceLine>declare function instanceMethodSignatureForSelector lib Foundation selector "instanceMethodSignatureForSelector:" (id as Ptr, aselector as Ptr) as Ptr</SourceLine>
   <SourceLine>return  AppleMethodSignature.MakeFromPtr( instanceMethodSignatureForSelector (classptr, aSelector))</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>aSelector as Ptr</ItemParams>
  <ItemResult>AppleMethodSignature</ItemResult>
 </Method>
 <Method>
  <ItemName>getCopy</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function getCopy(anInstance as Ptr) As Ptr</SourceLine>
   <SourceLine>#if targetmacos</SourceLine>
   <SourceLine>declare function copy lib Foundation selector "copy" (id as ptr) as ptr</SourceLine>
   <SourceLine>return copy (anInstance)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>anInstance as Ptr</ItemParams>
  <ItemResult>Ptr</ItemResult>
 </Method>
 <Method>
  <ItemName>Copy</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Copy() As AppleObject</SourceLine>
   <SourceLine>return new AppleObject (getCopy(id))</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>AppleObject</ItemResult>
 </Method>
 <Method>
  <ItemName>getMutableCopy</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function getMutableCopy(anInstance as Ptr) As Ptr</SourceLine>
   <SourceLine>#if targetmacos</SourceLine>
   <SourceLine>declare function mutableCopy lib Foundation selector "mutableCopy" (id as ptr) as ptr</SourceLine>
   <SourceLine>return mutableCopy (anInstance)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>anInstance as Ptr</ItemParams>
  <ItemResult>Ptr</ItemResult>
 </Method>
 <Method>
  <ItemName>MutableCopy</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function MutableCopy() As AppleObject</SourceLine>
   <SourceLine>return new AppleObject (getMutableCopy(id))</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>AppleObject</ItemResult>
 </Method>
 <Method>
  <ItemName>InstanceMethodImplementationForSelector</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function InstanceMethodImplementationForSelector(aSelector as cfstringref) As Ptr</SourceLine>
   <SourceLine>return InstanceMethodImplementationForSelector (NSSelectorFromString(aSelector))</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>aSelector as cfstringref</ItemParams>
  <ItemResult>Ptr</ItemResult>
 </Method>
 <Method>
  <ItemName>InstanceMethodImplementationForSelector</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function InstanceMethodImplementationForSelector(aSelector as Ptr) As Ptr</SourceLine>
   <SourceLine>#if targetmacos</SourceLine>
   <SourceLine>declare function methodForSelector lib Foundation selector "methodForSelector:" (id as Ptr, aselector as Ptr) as Ptr</SourceLine>
   <SourceLine>return methodForSelector (id, aSelector)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>aSelector as Ptr</ItemParams>
  <ItemResult>Ptr</ItemResult>
 </Method>
 <Method>
  <ItemName>isKindOfClass</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function isKindOfClass(aClass as Ptr) As Boolean</SourceLine>
   <SourceLine>#if targetmacos</SourceLine>
   <SourceLine>declare function isKindOfClass lib Foundation selector "isKindOfClass:" (id as Ptr, aClass as Ptr) as Boolean</SourceLine>
   <SourceLine>return isKindOfClass (id, aClass)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>aClass as Ptr</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>isMemberOfClass</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function isMemberOfClass(aClass as Ptr) As Boolean</SourceLine>
   <SourceLine>#if targetmacos</SourceLine>
   <SourceLine>declare function isMemberOfClass lib Foundation selector "isMemberOfClass:" (id as Ptr, aClass as Ptr) as Boolean</SourceLine>
   <SourceLine>return isMemberOfClass (id, aClass)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>aClass as Ptr</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>isSubclassOfClass</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function isSubclassOfClass(aClass as Ptr) As Boolean</SourceLine>
   <SourceLine>#if targetmacos</SourceLine>
   <SourceLine>declare function isSubclassOfClass lib Foundation selector "isSubclassOfClass:" (id as Ptr, aClass as Ptr) as Boolean</SourceLine>
   <SourceLine>return isSubclassOfClass (id, aClass)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>aClass as Ptr</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>MethodSignatureForSelector</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function MethodSignatureForSelector(aSelector as cfstringref) As AppleMethodSignature</SourceLine>
   <SourceLine>return MethodSignatureForSelector (NSSelectorFromString(aSelector))</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>aSelector as cfstringref</ItemParams>
  <ItemResult>AppleMethodSignature</ItemResult>
 </Method>
 <Method>
  <ItemName>MethodSignatureForSelector</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function MethodSignatureForSelector(aSelector as Ptr) As AppleMethodSignature</SourceLine>
   <SourceLine>#if targetmacos</SourceLine>
   <SourceLine>declare function methodSignatureForSelector lib Foundation selector "methodSignatureForSelector:" (id as Ptr, aselector as Ptr) as Ptr</SourceLine>
   <SourceLine>return  AppleMethodSignature.MakefromPtr ( methodSignatureForSelector (id, aSelector))</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>aSelector as Ptr</ItemParams>
  <ItemResult>AppleMethodSignature</ItemResult>
 </Method>
 <Method>
  <ItemName>PerformSelector</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function PerformSelector(aSelector as cfstringref, anObject as Ptr = NIL, anotherObject as Ptr = NIL) As Ptr</SourceLine>
   <SourceLine>return PerformSelector (NSSelectorFromString(aSelector))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>aSelector as cfstringref, anObject as Ptr = NIL, anotherObject as Ptr = NIL</ItemParams>
  <ItemResult>Ptr</ItemResult>
 </Method>
 <Method>
  <ItemName>PerformSelector</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub PerformSelector(aSelector as cfstringref, anObject as Ptr, waitUntilDone as Boolean = false)</SourceLine>
   <SourceLine>PerformSelector NSSelectorFromString(aSelector), anObject, waitUntilDone</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>aSelector as cfstringref, anObject as Ptr, waitUntilDone as Boolean = false</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>PerformSelector</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub PerformSelector(aSelector as cfstringref, delay as double, anObject as Ptr = Nil)</SourceLine>
   <SourceLine>PerformSelector NSSelectorFromString (aSelector), delay, anObject</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>aSelector as cfstringref, delay as double, anObject as Ptr = Nil</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>PerformSelector</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function PerformSelector(aSelector as Ptr, anObject as Ptr = NIL, anotherObject as Ptr = NIL) As Ptr</SourceLine>
   <SourceLine>#if targetmacos</SourceLine>
   <SourceLine>Declare function performSelector lib Foundation selector "performSelector:"(id as ptr, aselector as Ptr) as Ptr</SourceLine>
   <SourceLine>Declare function performSelectorwithObject lib Foundation selector "performSelector:withObject:"(id as ptr, aselector as Ptr, withObject as Ptr) as Ptr</SourceLine>
   <SourceLine>Declare function performSelectorwithObjectwithObject lib Foundation selector "performSelector:withObject:withObject:"(id as ptr, aselector as Ptr, withObject as Ptr, anotherobject as Ptr) as Ptr</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if anotherObject &lt;&gt; NIL then</SourceLine>
   <SourceLine>return performSelectorwithObjectwithObject (id, aSelector, anObject, anotherObject)</SourceLine>
   <SourceLine>elseif anObject &lt;&gt; NIL then</SourceLine>
   <SourceLine>return performSelectorwithObject (id, aSelector, anObject)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>return performSelector (id, aSelector)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>aSelector as Ptr, anObject as Ptr = NIL, anotherObject as Ptr = NIL</ItemParams>
  <ItemResult>Ptr</ItemResult>
 </Method>
 <Method>
  <ItemName>PerformSelector</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub PerformSelector(aSelector as Ptr, anObject as Ptr, waitUntilDone as Boolean = False)</SourceLine>
   <SourceLine>#if targetmacos</SourceLine>
   <SourceLine>Declare sub performSelectorOnMainThread lib Foundation selector "performSelectorOnMainThread:withObject:waitUntilDone:" _</SourceLine>
   <SourceLine>(id as ptr, aselector as Ptr, withObject as Ptr, waituntildone as boolean)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>performSelectorOnMainThread id, aSelector, anObject, waituntildone</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>aSelector as Ptr, anObject as Ptr, waitUntilDone as Boolean = False</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>PerformSelector</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub PerformSelector(aSelector as Ptr, delay as double, anObject as Ptr = Nil)</SourceLine>
   <SourceLine>#if targetmacos</SourceLine>
   <SourceLine>Declare Sub performSelectorwithObjectafterDelay lib Foundation selector "performSelector:withObject:afterDelay:" (id as ptr, aselector as Ptr, withObject as Ptr, delay as Double)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>performSelectorwithObjectafterDelay id, aSelector, anObject, delay</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>aSelector as Ptr, delay as double, anObject as Ptr = Nil</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>PerformSelectorInBackground</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub PerformSelectorInBackground(aSelector as cfstringref, anObject as Ptr = NIL)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>performSelectorInBackground NSSelectorFromString (aSelector), anObject</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>aSelector as cfstringref, anObject as Ptr = NIL</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>PerformSelectorInBackground</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub PerformSelectorInBackground(aSelector as Ptr, anObject as Ptr = NIL)</SourceLine>
   <SourceLine>#if targetmacos</SourceLine>
   <SourceLine>Declare sub performSelectorInBackground lib Foundation selector "performSelectorInBackground:withObject:" (id as ptr, aselector as Ptr, withObject as Ptr)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>performSelectorInBackground id, aSelector, anObject</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>aSelector as Ptr, anObject as Ptr = NIL</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>RespondsToSelector</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function RespondsToSelector(aSelector as cfstringref) As Boolean</SourceLine>
   <SourceLine>return RespondsToSelector (NSSelectorFromString(aSelector))</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>aSelector as cfstringref</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>RespondsToSelector</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function RespondsToSelector(aSelector as ptr) As Boolean</SourceLine>
   <SourceLine>#if targetmacos</SourceLine>
   <SourceLine>return ObjectiveCRuntime.class_respondsToSelector (ClassPtr, aSelector)</SourceLine>
   <SourceLine>// Probably faster this way</SourceLine>
   <SourceLine>// Declare function respondsToSelector lib Foundation selector "respondsToSelector:" (id as ptr, aselector as Ptr) as Boolean</SourceLine>
   <SourceLine>// return respondsToSelector (id, aSelector)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>aSelector as ptr</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>SetNilValueForKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub SetNilValueForKey(key as cfstringref)</SourceLine>
   <SourceLine>#if targetmacos</SourceLine>
   <SourceLine>declare sub setNilValueForKey lib Foundation selector "setNilValueForKey:" (id as Ptr, key as CFStringRef)</SourceLine>
   <SourceLine>setNilValueForKey (id, key)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>key as cfstringref</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ValueKeyDictionary</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ValueKeyDictionary(Keys as AppleArray) As AppleDictionary</SourceLine>
   <SourceLine>Declare Function dictionaryWithValuesForKeys lib Foundation selector "dictionaryWithValuesForKeys:" (id as ptr, keys as ptr) as ptr</SourceLine>
   <SourceLine>return new AppleDictionary (dictionaryWithValuesForKeys (id, keys.id))</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Keys as AppleArray</ItemParams>
  <ItemResult>AppleDictionary</ItemResult>
 </Method>
 <Method>
  <ItemName>MutableArrayForKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function MutableArrayForKey(Key as cfstringref) As AppleMutableArray</SourceLine>
   <SourceLine>Declare Function mutableArrayValueForKey lib Foundation selector "mutableArrayValueForKey:" (id as ptr, key as CFStringRef) as ptr</SourceLine>
   <SourceLine>return new AppleMutableArray (mutableArrayValueForKey (id, key))</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Key as cfstringref</ItemParams>
  <ItemResult>AppleMutableArray</ItemResult>
 </Method>
 <Method>
  <ItemName>MutableArrayForKeyPath</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function MutableArrayForKeyPath(KeyPath as cfstringref) As AppleMutableArray</SourceLine>
   <SourceLine>Declare Function mutableArrayValueForKeyPath lib Foundation selector "mutableArrayValueForKeyPath:" (id as ptr, key as CFStringRef) as ptr</SourceLine>
   <SourceLine>return new AppleMutableArray (mutableArrayValueForKeyPath (id, KeyPath))</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>KeyPath as cfstringref</ItemParams>
  <ItemResult>AppleMutableArray</ItemResult>
 </Method>
 <Method>
  <ItemName>getAttributes</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function getAttributes() As Ptr</SourceLine>
   <SourceLine>#if targetmacos</SourceLine>
   <SourceLine>declare function attributes_ lib Foundation selector "attributes" (id as ptr) as ptr</SourceLine>
   <SourceLine>return attributes_ (id)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Ptr</ItemResult>
 </Method>
 <Method>
  <ItemName>getFlipped</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function getFlipped() As boolean</SourceLine>
   <SourceLine>#if targetmacos</SourceLine>
   <SourceLine>declare function isFlipped lib Foundation selector "isFlipped" (id as ptr) as Boolean</SourceLine>
   <SourceLine>return isFlipped (id)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>getOpaque</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function getOpaque() As Boolean</SourceLine>
   <SourceLine>#if targetmacos</SourceLine>
   <SourceLine>declare function opaque lib Foundation selector "opaque" (id as ptr) as Boolean</SourceLine>
   <SourceLine>return opaque (id)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>setOpaque</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub setOpaque(value as boolean)</SourceLine>
   <SourceLine>#if targetmacos</SourceLine>
   <SourceLine>declare sub setOpaque lib Foundation selector "setOpaque:" (id as ptr, value as Boolean)</SourceLine>
   <SourceLine>setOpaque id, value</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>value as boolean</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>CGAffineTransformForKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CGAffineTransformForKey(Key as CFStringRef) As CGAffineTransform</SourceLine>
   <SourceLine>#if Target64Bit</SourceLine>
   <SourceLine>Declare Function ValueForKey lib Foundation selector "valueForKey:" (id as ptr, KeyPath as CFStringRef) as CGAffineTransform</SourceLine>
   <SourceLine>return ValueForKey (id, Key)</SourceLine>
   <SourceLine>#elseif Target32Bit</SourceLine>
   <SourceLine>Declare Function ValueForKey lib Foundation selector "valueForKey:" (id as ptr, KeyPath as CFStringRef) as CGAffineTransform32Bit</SourceLine>
   <SourceLine>return ValueForKey(id, Key).toCGAffineTransform</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Key as CFStringRef</ItemParams>
  <ItemResult>CGAffineTransform</ItemResult>
 </Method>
 <Method>
  <ItemName>setCGAffineTransformForKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub setCGAffineTransformForKey(Key as CFStringRef, value as CGAffineTransform)</SourceLine>
   <SourceLine>#if Target64Bit</SourceLine>
   <SourceLine>Declare Sub setValueForKey lib Foundation selector "setValue:forKey:" (id as ptr, KeyPath as CFStringRef, value as CGAffineTransform)</SourceLine>
   <SourceLine>setValueForKey (id, Key, value)</SourceLine>
   <SourceLine>#elseif Target32Bit</SourceLine>
   <SourceLine>Declare Sub setValueForKey lib Foundation selector "setValue:forKey:" (id as ptr, KeyPath as CFStringRef, value as CGAffineTransform32Bit)</SourceLine>
   <SourceLine>setValueForKey(id, Key, value.toCGAffineTransform32Bit)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Key as CFStringRef, value as CGAffineTransform</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>ClassAvailable</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared ClassAvailable As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>ClassAvailable As Boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>return (ClassPtr &lt;&gt; nil)</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>ClassName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>ClassName As CString</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>ClassName As CString</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>return ObjectiveCRuntime.class_getName (class_)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>ClassPtr</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared ClassPtr As Ptr</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>ClassPtr As Ptr</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>static mClassPtr as Ptr = NSClassFromString ("NSObject")</SourceLine>
   <SourceLine>return mClassPtr</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>DebugDescription</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>DebugDescription As Text</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>DebugDescription As Text</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>declare function debugDescription lib Foundation selector "debugDescription" (id as Ptr) as cfstringref</SourceLine>
   <SourceLine>return debugDescription (id)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>HasOwnership</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>HasOwnership As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>HasOwnership As Boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>return mHasOwnership</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>Id</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Id As Ptr</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Id As Ptr</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>return mId</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>IsNIL</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>IsNIL As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>IsNIL As Boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>return mid = nil</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>mHasOwnership</ItemName>
  <Compatibility></Compatibility>
  <Attributes>hidden</Attributes>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mHasOwnership As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mHasOwnership As Boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mId</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mId As Ptr</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mId As Ptr</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>RetainCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>RetainCount As UInteger</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>RetainCount As UInteger</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Declare function retainCount  lib Foundation selector "retainCount" (id as ptr) as uinteger</SourceLine>
   <SourceLine>return retainCount (id)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>SuperClass</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>SuperClass As Ptr</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>SuperClass As Ptr</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>return ObjectiveCRuntime.class_getSuperclass (class_)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>SuperClassName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>SuperClassName As CString</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>SuperClassName As CString</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>return ObjectiveCRuntime.class_getName (SuperClass)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>Class_</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Class_ As Ptr</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Class_ As Ptr</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>return ObjectiveCRuntime.object_getClass (id)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>Hash</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Hash As UInteger</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Hash As UInteger</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>#if targetmacos</SourceLine>
   <SourceLine>declare function hash lib Foundation selector "hash" (id as Ptr) as UInteger</SourceLine>
   <SourceLine>return hash (id)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>Description</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Description As Text</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Description As Text</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>#if targetmacos</SourceLine>
   <SourceLine>declare function getdescription lib Foundation selector "description" (id as Ptr) as cfstringref</SourceLine>
   <SourceLine>return getdescription (id)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>isProxy</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>isProxy As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>isProxy As Boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>#if targetmacos</SourceLine>
   <SourceLine>declare function isProxy lib Foundation selector "isProxy" (id as Ptr) as Boolean</SourceLine>
   <SourceLine>return isProxy (id)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>MetaClass</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>MetaClass As Ptr</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>MetaClass As Ptr</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>return ObjectiveCRuntime.objc_getMetaClass (ClassName)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>MetaClassName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>MetaClassName As CString</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>MetaClassName As CString</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>#if targetmacos</SourceLine>
   <SourceLine>return ObjectiveCRuntime.class_getName (MetaClass)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>DebugDescription</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Text</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>HasOwnership</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>IsNIL</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>mHasOwnership</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Description</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Text</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>isProxy</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>RetainCount</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>UInteger</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Hash</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>UInteger</ItemType>
  </ViewProperty>
 </ViewBehavior>
 <Enumeration>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>NSImageAlignment</ItemName>
  <ItemFlags>0</ItemFlags>
  <ItemType>UInteger</ItemType>
  <ItemName>NSImageAlignment</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Center</SourceLine>
   <SourceLine>Top</SourceLine>
   <SourceLine>TopLeft</SourceLine>
   <SourceLine>TopRight</SourceLine>
   <SourceLine>Left</SourceLine>
   <SourceLine>Bottom</SourceLine>
   <SourceLine>BottomLeft</SourceLine>
   <SourceLine>BottomRight</SourceLine>
   <SourceLine>Right</SourceLine>
  </ItemSource>
 </Enumeration>
 <Enumeration>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>NSImageFrameStyle</ItemName>
  <ItemFlags>0</ItemFlags>
  <ItemType>UInteger</ItemType>
  <ItemName>NSImageFrameStyle</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>None</SourceLine>
   <SourceLine>Photo</SourceLine>
   <SourceLine>GrayBezel</SourceLine>
   <SourceLine>Groove</SourceLine>
   <SourceLine>Button</SourceLine>
  </ItemSource>
 </Enumeration>
 <Enumeration>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>NSImageScaling</ItemName>
  <ItemFlags>0</ItemFlags>
  <ItemType>UInteger</ItemType>
  <ItemName>NSImageScaling</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>ProportionallyDown</SourceLine>
   <SourceLine>AxesIndependently</SourceLine>
   <SourceLine>None</SourceLine>
   <SourceLine>ProportionallyUpOrDown</SourceLine>
  </ItemSource>
 </Enumeration>
</block>
</RBProject>
