<?xml version="1.0" encoding="UTF-8"?>
<RBProject version="2015r3" FormatVersion="2" MinIDEVersion="20140300">
<block type="Module" ID="987688959">
 <ObjName>QuartzCoreFramework</ObjName>
 <ObjContainerID>803434495</ObjContainerID>
 <IsClass>0</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <ExternalMethod>
  <ItemName>CACurrentMediaTime</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Declare Function CACurrentMediaTime Lib quartzcore () As Double</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Double</ItemResult>
  <LibraryName>#quartzcore</LibraryName>
  <SoftLink>0</SoftLink>
 </ExternalMethod>
 <Method>
  <ItemName>CATransform3DConcat</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CATransform3DConcat(T1 As CATransform3D, T2 As CATransform3D) As CATransform3D</SourceLine>
   <SourceLine>#if target32bit</SourceLine>
   <SourceLine>Declare function CATransform3DConcat lib QuartzCore (T1 As CATransform3D32Bit, T2 As CATransform3D32Bit) as CATransform3D32Bit</SourceLine>
   <SourceLine>return CATransform3DConcat (T1.toCATransform3D32Bit, T2.toCATransform3D32Bit).toCATransForm3D</SourceLine>
   <SourceLine>#elseif Target64Bit</SourceLine>
   <SourceLine>Declare function CATransform3DConcat lib QuartzCore (T1 As CATransform3D, T2 As CATransform3D) as CATransform3D</SourceLine>
   <SourceLine>return CATransform3DConcat (T1, T2)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>T1 As CATransform3D, T2 As CATransform3D</ItemParams>
  <ItemResult>CATransform3D</ItemResult>
 </Method>
 <Method>
  <ItemName>CATransform3DEqualToTransform</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CATransform3DEqualToTransform(t1 as CATransform3D, t2 as CATransform3D) As Boolean</SourceLine>
   <SourceLine>#if Target32Bit</SourceLine>
   <SourceLine>Declare function CATransform3DEqualToTransform lib QuartzCore (t1 as CATransform3D32Bit, t2 as CATransform3D32Bit) as Boolean</SourceLine>
   <SourceLine>return CATransform3DEqualToTransform(t1.toCATransform3D32Bit, t2.toCATransform3D32Bit)</SourceLine>
   <SourceLine>#elseif Target64Bit</SourceLine>
   <SourceLine>Declare function CATransform3DEqualToTransform lib QuartzCore (t1 as CATransform3D, t2 as CATransform3D) as Boolean</SourceLine>
   <SourceLine>return CATransform3DEqualToTransform (t1, t2)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>t1 as CATransform3D, t2 as CATransform3D</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>CATransform3DGetAffineTransform</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CATransform3DGetAffineTransform(T as CATransform3D) As CGAffineTransform</SourceLine>
   <SourceLine>#if target32bit</SourceLine>
   <SourceLine>Declare function CATransform3DGetAffineTransform lib QuartzCore (T as CATransform3D32Bit) as CGAffineTransform32Bit</SourceLine>
   <SourceLine>return CATransform3DGetAffineTransform(t.toCATransform3D32Bit).toCGAffineTransform</SourceLine>
   <SourceLine>#elseif Target64Bit</SourceLine>
   <SourceLine>Declare function CATransform3DGetAffineTransform lib QuartzCore (T as CATransform3D) as CGAffineTransform</SourceLine>
   <SourceLine>return CATransform3DGetAffineTransform (T)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>T as CATransform3D</ItemParams>
  <ItemResult>CGAffineTransform</ItemResult>
 </Method>
 <Method>
  <ItemName>CATransform3DIdentity</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CATransform3DIdentity() As CATransform3D</SourceLine>
   <SourceLine>return CATransform3DMakeTranslation (0,0,0)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>CATransform3D</ItemResult>
 </Method>
 <Method>
  <ItemName>CATransform3DInvert</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CATransform3DInvert(T As CATransform3D) As CATransform3D</SourceLine>
   <SourceLine>#if target32bit</SourceLine>
   <SourceLine>Declare function CATransform3DInvert lib QuartzCore (T As CATransform3D32Bit) as CATransform3D32Bit</SourceLine>
   <SourceLine>return CATransform3DInvert (T.toCATransform3D32Bit).toCATransForm3D</SourceLine>
   <SourceLine>#elseif Target64Bit</SourceLine>
   <SourceLine>Declare function CATransform3DInvert lib QuartzCore (T As CATransform3D) as CATransform3D</SourceLine>
   <SourceLine>return CATransform3DInvert (T)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>T As CATransform3D</ItemParams>
  <ItemResult>CATransform3D</ItemResult>
 </Method>
 <Method>
  <ItemName>CATransform3DIsAffine</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CATransform3DIsAffine(T as CATransform3D) As Boolean</SourceLine>
   <SourceLine>#if target32bit</SourceLine>
   <SourceLine>Declare function CATransform3DIsAffine lib QuartzCore (t as CATransform3D32Bit) as Boolean</SourceLine>
   <SourceLine>return CATransform3DIsAffine (t.toCATransform3D32Bit)</SourceLine>
   <SourceLine>#elseif Target64Bit</SourceLine>
   <SourceLine>Declare function CATransform3DIsAffine lib CoreGraphics (t as CATransform3D) as Boolean</SourceLine>
   <SourceLine>return CATransform3DIsAffine (t)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>T as CATransform3D</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>CATransform3DIsIdentity</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CATransform3DIsIdentity(t as CATransform3D) As Boolean</SourceLine>
   <SourceLine>#if Target32Bit</SourceLine>
   <SourceLine>Declare function CATransform3DIsIdentity lib QuartzCore (t as CATransform3D32Bit) as Boolean</SourceLine>
   <SourceLine>return CATransform3DIsIdentity(t.toCATransform3D32Bit)</SourceLine>
   <SourceLine>#elseif Target64Bit</SourceLine>
   <SourceLine>Declare function CATransform3DIsIdentity lib QuartzCore (t as CATransform3D) as Boolean</SourceLine>
   <SourceLine>return CATransform3DIsIdentity (t)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>t as CATransform3D</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>CATransform3DMakeAffineTransform</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CATransform3DMakeAffineTransform(T as CGAffineTransform) As CATransform3D</SourceLine>
   <SourceLine>#if target32bit</SourceLine>
   <SourceLine>Declare function CATransform3DMakeAffineTransform lib QuartzCore (T as CGAffineTransform32Bit) as CATransform3D32Bit</SourceLine>
   <SourceLine>return CATransform3DMakeAffineTransform(t.toCGAffineTransform32Bit).toCATransform3D</SourceLine>
   <SourceLine>#elseif Target64Bit</SourceLine>
   <SourceLine>Declare function CATransform3DMakeAffineTransform lib QuartzCore (T as CGAffineTransform) as CATransform3D</SourceLine>
   <SourceLine>return CATransform3DMakeAffineTransform (T)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>T as CGAffineTransform</ItemParams>
  <ItemResult>CATransform3D</ItemResult>
 </Method>
 <Method>
  <ItemName>CATransform3DMakeRotation</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CATransform3DMakeRotation(angle as double, x as double, y as double, z as double) As CATransform3D</SourceLine>
   <SourceLine>#if target32bit</SourceLine>
   <SourceLine>Declare function CATransform3DMakeRotation lib QuartzCore (angle as single, x as single, y as single, z as single) as CATransform3D32Bit</SourceLine>
   <SourceLine>return CATransform3DMakeRotation(angle,x, y, z).toCATransform3D</SourceLine>
   <SourceLine>#elseif Target64Bit</SourceLine>
   <SourceLine>Declare function CATransform3DMakeRotation lib QuartzCore (angle as double, x as double, y as double, z as double) as CATransform3D</SourceLine>
   <SourceLine>return CATransform3DMakeRotation (angle, x, y, z)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>angle as double, x as double, y as double, z as double</ItemParams>
  <ItemResult>CATransform3D</ItemResult>
 </Method>
 <Method>
  <ItemName>CATransform3DMakeScale</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CATransform3DMakeScale(scaleX as double, scaleY as Double = 0, scaleZ as Double = 0) As CATransform3D</SourceLine>
   <SourceLine>if scaleY = 0 and scalez = 0 then</SourceLine>
   <SourceLine>scaleY = scaleX // scale proportionally if only one value is supplied</SourceLine>
   <SourceLine>scaleZ = scaleX</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>#if target32bit</SourceLine>
   <SourceLine>Declare function CATransform3DMakeScale lib QuartzCore (scaleX as single, ScaleY as Single, scaleZ as Single) as CATransform3D32Bit</SourceLine>
   <SourceLine>return CATransform3DMakeScale(ScaleX, ScaleY, scaleZ).toCATransform3D</SourceLine>
   <SourceLine>#elseif Target64Bit</SourceLine>
   <SourceLine>Declare function CATransform3DMakeScale lib QuartzCore (scaleX as Double, ScaleY as Double, ScaleZ as Double) as CATransform3D</SourceLine>
   <SourceLine>return CATransform3DMakeScale(ScaleX, ScaleY, scaleZ)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>scaleX as double, scaleY as Double = 0, scaleZ as Double = 0</ItemParams>
  <ItemResult>CATransform3D</ItemResult>
 </Method>
 <Method>
  <ItemName>CATransform3DMakeTranslation</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CATransform3DMakeTranslation(tx as Double, ty as Double, tz as double) As CATransform3D</SourceLine>
   <SourceLine>#if target32bit</SourceLine>
   <SourceLine>Declare function CATransform3DMakeTranslation lib QuartzCore ( tx as Single, ty as Single, tz as single) as CATransform3D32Bit</SourceLine>
   <SourceLine>return CATransform3DMakeTranslation(tx, ty, tz).tocaTransForm3D</SourceLine>
   <SourceLine>#elseif Target64Bit</SourceLine>
   <SourceLine>Declare function CATransform3DMakeTranslation lib QuartzCore ( tx as Double, ty as Double, tz as double) as CATransform3D</SourceLine>
   <SourceLine>return CATransform3DMakeTranslation ( tx, ty, tz)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>tx as Double, ty as Double, tz as double</ItemParams>
  <ItemResult>CATransform3D</ItemResult>
 </Method>
 <Method>
  <ItemName>CATransform3DRotate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CATransform3DRotate(T As CATransform3D, angle as double, x as double, y as double, z as double) As CATransform3D</SourceLine>
   <SourceLine>#if target32bit</SourceLine>
   <SourceLine>Declare function CATransform3DRotate lib QuartzCore (T As CATransform3D32Bit, angle as single, x as Single, y as single, z as single) as CATransform3D32Bit</SourceLine>
   <SourceLine>return CATransform3DRotate(T.toCATransform3D32Bit, angle, x, y, z).toCATransform3D</SourceLine>
   <SourceLine>#elseif Target64Bit</SourceLine>
   <SourceLine>Declare function CATransform3DRotate lib QuartzCore (T As CGAffineTransform, angle as double, x as double, y as double, z as double) as CATransform3D</SourceLine>
   <SourceLine>return CATransform3DRotate (T, angle, x, y, z)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>T As CATransform3D, angle as double, x as double, y as double, z as double</ItemParams>
  <ItemResult>CATransform3D</ItemResult>
 </Method>
 <Method>
  <ItemName>CATransform3DScale</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CATransform3DScale(T as CATransform3D, scaleX as double, scaleY as Double = 0, ScaleZ As Double) As CATransform3D</SourceLine>
   <SourceLine>if scaleY = 0 then scaleY = scaleX // scale proportionally if only one value is supplied</SourceLine>
   <SourceLine>#if target32bit</SourceLine>
   <SourceLine>Declare function CATransform3DScale lib QuartzCore (T as CATransform3D32Bit, scaleX as single, ScaleY as Single, ScaleZ As Single) as CATransform3D32Bit</SourceLine>
   <SourceLine>return CATransform3DScale (t.toCATransform3D32Bit, ScaleX, ScaleY, ScaleZ).tocatransform3d</SourceLine>
   <SourceLine>#elseif Target64Bit</SourceLine>
   <SourceLine>Declare function CATransform3DScale lib QuartzCore (T as CGAffineTransform, scaleX as Double, ScaleY as Double, ScaleZ as Double) as CATransform3D</SourceLine>
   <SourceLine>return CATransform3DScale (T, ScaleX, ScaleY, ScaleZ)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>T as CATransform3D, scaleX as double, scaleY as Double = 0, ScaleZ As Double</ItemParams>
  <ItemResult>CATransform3D</ItemResult>
 </Method>
 <Method>
  <ItemName>CATransform3DTranslate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CATransform3DTranslate(T as CATransform3D, DeltaX as double, DeltaY as Double, DeltaZ as Double) As CATransform3D</SourceLine>
   <SourceLine>#if target32bit</SourceLine>
   <SourceLine>Declare function CATransform3DTranslate lib QuartzCore (T as CATransform3D32Bit, DeltaX as single, DeltaY as Single, DeltaZ as single) as CATransform3D32Bit</SourceLine>
   <SourceLine>return CATransform3DTranslate(t.toCATransform3D32Bit, DeltaX, DeltaY, deltaz).toCATransform3D</SourceLine>
   <SourceLine>#elseif Target64Bit</SourceLine>
   <SourceLine>Declare function CATransform3DTranslate lib QuartzCore (T as CATransform3D, DeltaX as Double, DeltaY as Double, DeltaZ as double) as CATransform3D</SourceLine>
   <SourceLine>return CATransform3DTranslate (T, DeltaX, DeltaY, deltaZ)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>T as CATransform3D, DeltaX as double, DeltaY as Double, DeltaZ as Double</ItemParams>
  <ItemResult>CATransform3D</ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
 <Constant>
  <ItemName>QuartzCore</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>6</ItemType>
  <ItemDef>QuartzCore.framework</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>QuartzCorePath</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>6</ItemType>
  <ItemDef>com.apple.QuartzCore</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Structure>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>CATransform3D</ItemName>
  <ItemFlags>0</ItemFlags>
  <ItemName>CATransform3D</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m11 as Double</SourceLine>
   <SourceLine>m12 as Double</SourceLine>
   <SourceLine>m13 as Double</SourceLine>
   <SourceLine>m14 as Double</SourceLine>
   <SourceLine>m21 as Double</SourceLine>
   <SourceLine>m22 as double</SourceLine>
   <SourceLine>m23 as double</SourceLine>
   <SourceLine>m24 as double</SourceLine>
   <SourceLine>m31 as double</SourceLine>
   <SourceLine>m32 as double</SourceLine>
   <SourceLine>m33 as double</SourceLine>
   <SourceLine>m34 as double</SourceLine>
   <SourceLine>m41 as double</SourceLine>
   <SourceLine>m42 as double</SourceLine>
   <SourceLine>m43 as double</SourceLine>
   <SourceLine>m44 as double</SourceLine>
  </ItemSource>
 </Structure>
 <Structure>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>CATransform3D32Bit</ItemName>
  <ItemFlags>0</ItemFlags>
  <ItemName>CATransform3D32Bit</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m11 as Single</SourceLine>
   <SourceLine>m12 as Single</SourceLine>
   <SourceLine>m13 as Single</SourceLine>
   <SourceLine>m14 as Single</SourceLine>
   <SourceLine>m21 as Single</SourceLine>
   <SourceLine>m22 as Single</SourceLine>
   <SourceLine>m23 as Single</SourceLine>
   <SourceLine>m24 as Single</SourceLine>
   <SourceLine>m31 as Single</SourceLine>
   <SourceLine>m32 as Single</SourceLine>
   <SourceLine>m33 as Single</SourceLine>
   <SourceLine>m34 as Single</SourceLine>
   <SourceLine>m41 as Single</SourceLine>
   <SourceLine>m42 as Single</SourceLine>
   <SourceLine>m43 as Single</SourceLine>
   <SourceLine>m44 as Single</SourceLine>
  </ItemSource>
 </Structure>
</block>
</RBProject>
