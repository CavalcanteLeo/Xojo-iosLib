#tag Class
Protected Class iOSLibSKNode
Inherits iOSLibResponder
	#tag Method, Flags = &h0
		Sub AddChild(Child as ioslibsknode)
		  Declare sub addChild lib SpriteKit selector "addChild:" (id as ptr, child as ptr)
		  addChild id, Child.id
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h1000
		Sub Constructor()
		  Declare Function node lib SpriteKit selector "node" (id as ptr) as ptr
		  // Calling the overridden superclass constructor.
		  // Note that this may need modifications if there are multiple constructor choices.
		  // Possible constructor calls:
		  // Constructor() -- From iOSLibResponder
		  // Constructor() -- From iOSLibObject
		  // Constructor(AnId as Ptr) -- From iOSLibObject
		  Super.Constructor (node(ClassPtr))
		  
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h0
		Sub RunAction(Action as iOSLibSKAction)
		  Declare sub runAction lib SpriteKit selector "runAction:" (id as ptr, action as ptr)
		  runAction id, Action.id
		End Sub
	#tag EndMethod


	#tag ComputedProperty, Flags = &h1
		#tag Getter
			Get
			  static mClassPtr as Ptr
			  static mClassname as text = "SKNode"
			  if mClassPtr = nil then
			    dim result as ptr =  NSClassFromString (mClassname)
			    if result = nil then
			      call iOSLibSystem.LoadFramework ("SpriteKit")
			       result  =  NSClassFromString (mClassname)
			    end if
			    mClassPtr = result
			  end if
			  return mClassPtr
			End Get
		#tag EndGetter
		Protected Shared ClassPtr As Ptr
	#tag EndComputedProperty

	#tag ComputedProperty, Flags = &h0
		#tag Getter
			Get
			  #if Target64Bit
			    declare function position lib SpriteKit selector "position" (id as ptr) as NSPoint
			    return position (id)
			  #elseif Target32Bit
			    declare function position lib SpriteKit selector "position" (id as ptr) as NSPoint32Bit
			    return position(id).toNSPoint
			  #endif
			  
			End Get
		#tag EndGetter
		#tag Setter
			Set
			  #if Target64Bit
			    declare Sub setPosition lib SpriteKit selector "setPosition:" (id as ptr, value as NSPoint)
			     setPosition (id, value)
			  #elseif Target32Bit
			    declare sub setPosition lib SpriteKit selector "setPosition:" (id as ptr, value as NSPoint32Bit)
			    setPosition(id, value.toNSPoint32)
			  #endif
			  
			End Set
		#tag EndSetter
		Position As NSPoint
	#tag EndComputedProperty


	#tag ViewBehavior
		#tag ViewProperty
			Name="DebugDescription"
			Group="Behavior"
			Type="Text"
		#tag EndViewProperty
		#tag ViewProperty
			Name="HasOwnership"
			Group="Behavior"
			Type="Boolean"
		#tag EndViewProperty
		#tag ViewProperty
			Name="Index"
			Visible=true
			Group="ID"
			InitialValue="-2147483648"
			Type="Integer"
		#tag EndViewProperty
		#tag ViewProperty
			Name="IsNIL"
			Group="Behavior"
			Type="Boolean"
		#tag EndViewProperty
		#tag ViewProperty
			Name="Left"
			Visible=true
			Group="Position"
			InitialValue="0"
			Type="Integer"
		#tag EndViewProperty
		#tag ViewProperty
			Name="mHasOwnership"
			Group="Behavior"
			Type="Boolean"
		#tag EndViewProperty
		#tag ViewProperty
			Name="Name"
			Visible=true
			Group="ID"
			Type="String"
		#tag EndViewProperty
		#tag ViewProperty
			Name="Super"
			Visible=true
			Group="ID"
			Type="String"
		#tag EndViewProperty
		#tag ViewProperty
			Name="Top"
			Visible=true
			Group="Position"
			InitialValue="0"
			Type="Integer"
		#tag EndViewProperty
	#tag EndViewBehavior
End Class
#tag EndClass
